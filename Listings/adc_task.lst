C51 COMPILER V9.54   ADC_TASK                                                              05/02/2017 13:31:24 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ADC_TASK
OBJECT MODULE PLACED IN .\Objects\adc_task.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE task\adc\adc_task.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings
                    -\adc_task.lst) OBJECT(.\Objects\adc_task.obj)

line level    source

   1          #include "task/adc/adc_task.h"
   2          
   3          /* AD sample */
   4          extern  data  Byte         ad_equ_pum;                  //Ã¿¸öÍ¨µÀ²ÉÑù¶à´ÎÇóÆ½¾ùÖµ
   5          
   6          extern  data  Byte         ad_index;                    //ÕýÔÚ²ÉÑùµÄÍ¨µÀºÅ, È¡Öµ·¶Î§0~1
   7          extern  data  sAD_Sample   ad_sample;                   //±£´æµ±Ç°²ÉÑùÖµ
   8          extern  data  sAD_Sum      ad_samp_equ[2];              //¾ùºâÈ¥ÔëÉùÇóºÍ
   9          extern  data  Uint16       ad_chn_sample[2];            //×îÐÂÒ»ÂÖ²ÉÑùÖµ£¨ÒÑ¾ùºâÈ¥ÔëÉù£¬Ã¿Í¨µÀÒ»¸öµã£©
  10          extern  data  Byte         ad_chn_over[2];              //¸÷Í¨µÀÁ¬Ðø²ÉÑùµã(¾ùºâºó)µÄ·§ÖµÅÐ¶¨£º 0 - ·¶Î§ÄÚ£
             -» 1 - ³¬·§Öµ
  11          extern  data  Byte         ad_alarm_exts;               //±¨¾¯±êÖ¾£º00-ÎÞ±¨¾¯,01-1#·ÀÇø±¨¾¯£¬02-2#·ÀÇø±¨¾¯
             -£¬03-1#·ÀÇøºÍ2#·ÀÇøÍ¬Ê±±¨¾¯
  12          extern  data  Uint16       ad_alarm_tick[2];            //¸÷Í¨µÀ±¨¾¯¼ÆÊ±tick
  13          extern  data  Byte         alarm_host_read[2];          //±¨¾¯Ö÷»úÊÇ·ñ¶ÁÈ¡ÁË±¾Éè±¸µÄ±¨¾¯×´Ì¬
  14          
  15          void adc_task_init(void)
  16          {
  17   1              Byte i;
  18   1      
  19   1              //Ïà¹Ø±äÁ¿³õÊ¼»¯
  20   1              ad_index        = 0;
  21   1              ad_sample.valid = 0;                     //¿ÕÏÐ£¬¿ÉÒÔÐ´ÈëÐÂÖµ
  22   1              
  23   1              ad_alarm_exts = 0;
  24   1              alarm_host_read[0] = 0;
  25   1              alarm_host_read[1] = 0;
  26   1      
  27   1              for (i = 0; i < 2; i++) {
  28   2                      ad_samp_equ[i].sum       = 0;        //¾ùºâÈ¥ÔëÉùÇóºÍ
  29   2                      ad_samp_equ[i].point     = 0;
  30   2                      ad_chn_sample[i]         = 0;        //×îÐÂÒ»ÂÖ²ÉÑùÖµ
  31   2                      ad_chn_over[i]           = 0;        //¸÷Í¨µÀÁ¬Ðø²ÉÑùµã(¾ùºâºó)µÄ·§ÖµÅÐ¶¨£º¾ùÔÚ·¶Î§ÄÚ
  32   2                      ad_alarm_tick[i]         = 0;
  33   2              }
  34   1          
  35   1              //adcÓ²¼þ³õÊ¼»¯
  36   1              adc_init();
  37   1      }
  38          
  39          void adc_task(void)
  40          {
  41   1              Byte    index;          //²ÉÑùÍ¨µÀºÅ
  42   1              Uint16  val_temp;       //ÐÂËÍÈëµÄ10bit²ÉÑùÖµ,  ºó×÷ÁÙÊ±±äÁ¿
  43   1              Uint16  val;            //4µã¾ùºâºóµÃµ½µÄÆ½¾ù²ÉÑùÖµ, ×÷ÎªÒ»¸ö¿É½øÐÐ³¬ÏÞÅÐ¶ÏµÄ×îÐ¡µã
  44   1      
  45   1              //ÓÐÐÂ²ÉÑùÊý¾Ýµ½´ï
  46   1              if (ad_sample.valid) {  
  47   2                      // 0. ±£´æµ½ÁÙÊ±±äÁ¿
  48   2                      val_temp = ad_sample.val;
  49   2                      index    = ad_sample.index;
  50   2      
  51   2                      // 1. ±£´æµ½¾ùºâÈ¥ÔëÉùÇóºÍÖÐ
  52   2                      ad_samp_equ[index].sum += val_temp;
C51 COMPILER V9.54   ADC_TASK                                                              05/02/2017 13:31:24 PAGE 2   

  53   2                      ad_samp_equ[index].point++;
  54   2      
  55   2                      // 2. µ±Ç°Í¨µÀÊÇ·ñÂú×ãÈ¥ÔëÉùµãÊý
  56   2                      if (ad_samp_equ[index].point == 4) {
  57   3                              // ÒÑÂúÈ¥ÔëÉùµãÊý£¬¿ÉÇó³ö¾ùºâºóµÄÒ»¸öµã
  58   3                              // 2.a Çó³ö¶ÔÓ¦Í¨µÀµÄÒ»¸ö²ÉÑùµã
  59   3                              val = ad_samp_equ[index].sum / 4;  //ÇóÆ½¾ùÖµ
  60   3      
  61   3                              // 2.b ÇåÁãµ±Ç°Í¨µÀµÄÈ¥ÔëÉùÇóºÍ½á¹¹
  62   3                              ad_samp_equ[index].sum = 0;
  63   3                              ad_samp_equ[index].point = 0;
  64   3      
  65   3                              // 2.c ±£´æÊµÊ±²ÉÑùÖµ
  66   3                              ad_chn_sample[index] = val;   //±£´æµ½×îÐÂÒ»ÂÖ²ÉÑùÖµÊý×éÖÐ
  67   3                              
  68   3                              // 2.d ÅÐ¶Ïµ±Ç°Í¨µÀÊÇ·ñ±¨¾¯
  69   3                              ad_chn_over[index] = ad_chn_over[index] << 1;   //Bit0Ìî0£¬Òò´ËÈ±Ê¡ÔÚÔÊÐí·¶Î§ÄÚ
  70   3                              
  71   3                              if (index == 0) {//1#·ÀÇø
  72   4                                      //a. ÊÇ·ñ³¬ÉÏÏÂÏÞ·§Öµ
  73   4                                      if (!(((val >= TH_A1_EOL_MIN) && (val <= TH_A1_EOL_MAX)) || 
  74   4                                                 ((val >= TH_A1_NC_MIN)  && (val <= TH_A1_NC_MAX)))) { 
  75   5                                              //±¨¾¯
  76   5                                              ad_chn_over[index] |= 0x01;       
  77   5                                      }
  78   4                              } else if (index == 1) {//2#·ÀÇø
  79   4                                      //a. ÊÇ·ñ³¬ÉÏÏÂÏÞ·§Öµ
  80   4                                      if (val >= TH_A2_MAX) { 
  81   5                                              //±¨¾¯
  82   5                                              ad_chn_over[index] |= 0x01;       
  83   5                                      }
  84   4                              }
  85   3                              
  86   3                              //Á¬Ðø4µã³¬·¶Î§£¬´ËÍ¨µÀÓÐ±¨¾¯
  87   3                              if ((ad_chn_over[index] & 0x0F) == 0x0F) {
  88   4                                      //³¬³öÔÊÐí·¶Î§£¬ÖÃ±êÖ¾
  89   4                                      ad_alarm_exts |= (1 << index);
  90   4      
  91   4                                      //±¨¾¯¼ÆÊ±tick
  92   4                                      ad_alarm_tick[index] = ALARM_TEMPO;                     
  93   4                              } else if ((ad_chn_over[index] & 0x0F) == 0x00) {//ÎÞ±¨¾¯
  94   4                                      //¼ì²é±¨¾¯Ê±¼äÊÇ·ñÒÑµ½,»òÕß±¨¾¯Ö÷»úÊÇ·ñ¶ÁÈ¡ÁË±¾Éè±¸µÄ±¨¾¯×´Ì¬
  95   4                                      if ((ad_alarm_tick[index] == 0) || (alarm_host_read[index] == 1)) {
  96   5                                              //±¨¾¯ÒÑ¾­µ½×î´ó±¨¾¯Ê±¼ä»òÕß±¨¾¯Ö÷»úÊÇ¶ÁÈ¡ÁË±¾Éè±¸µÄ±¨¾¯×´Ì¬, Í£Ö¹±¨¾¯
  97   5                                              ad_alarm_exts &= ~(1 << index);
  98   5                                              
  99   5                                              //¸´Î»
 100   5                                              alarm_host_read[index] = 0;
 101   5                                      }
 102   4                              }
 103   3                      }
 104   2      
 105   2                      //3.µ±Ç°²ÉÑùÖµ´¦ÀíÍê±Ï£¬ÔÊÐíÐÂµÄ²ÉÑùÖµÊäÈë
 106   2                      ad_sample.valid = FALSE;
 107   2              }
 108   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    323    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.54   ADC_TASK                                                              05/02/2017 13:31:24 PAGE 3   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
